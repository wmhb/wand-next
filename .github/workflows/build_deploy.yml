# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build & Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14]

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install
      run: npm install
    - name: Build
      run: |
        cp config.example.js config.js
        npm run vue:lint
        npm run vue:build
        echo "ðŸ›  Building master branch - Deploying app..."
    - uses: AEnterprise/rsync-deploy@v1.0.1
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        ARGS: "-e -c -r --delete"
        SERVER_PORT: ${{ secrets.DEPLOY_PORT }}
        FOLDER: "./src/api"
        SERVER_IP: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USER }}
        SERVER_DESTINATION: ${{ secrets.REMOTE_DIR }}/src
    - uses: AEnterprise/rsync-deploy@v1.0.1
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        ARGS: "-e -c -r --delete"
        SERVER_PORT: ${{ secrets.DEPLOY_PORT }}
        FOLDER: "./dist"
        SERVER_IP: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USER }}
        SERVER_DESTINATION: ${{ secrets.REMOTE_DIR }}
    - uses: AEnterprise/rsync-deploy@v1.0.1
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        ARGS: "-e -c -r --delete"
        SERVER_PORT: ${{ secrets.DEPLOY_PORT }}
        FOLDER: "./package.json"
        SERVER_IP: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USER }}
        SERVER_DESTINATION: ${{ secrets.REMOTE_DIR }}
    - name: Restarting Node.js process
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        port: ${{ secrets.DEPLOY_PORT }}
        script: cd ${{secrets.REMOTE_DIR}} && npm install && supervisorctl restart wand-server                  
